// Fixed-Point Coefficients for 512-Point FFT (Q15 Format)
// Generated for AMD Phoenix NPU (AIE2) - INT16 only
// All values in Q15 format: 1 sign bit + 15 fractional bits

#ifndef FFT_COEFFS_FIXED_H
#define FFT_COEFFS_FIXED_H

#include <stdint.h>

// Twiddle factors (real part) - Cosine values in Q15
// W_N^k = cos(-2πk/N) for k = 0..255
const int16_t twiddle_cos_q15[256] = {
     32767,  32765,  32757,  32745,  32728,  32705,  32678,  32646,
     32609,  32567,  32521,  32469,  32412,  32351,  32285,  32213,
     32137,  32057,  31971,  31880,  31785,  31685,  31580,  31470,
     31356,  31237,  31113,  30985,  30852,  30714,  30571,  30424,
     30273,  30117,  29956,  29791,  29621,  29447,  29268,  29085,
     28898,  28706,  28510,  28310,  28105,  27896,  27683,  27466,
     27245,  27019,  26790,  26556,  26319,  26077,  25832,  25582,
     25329,  25072,  24811,  24547,  24279,  24007,  23731,  23452,
     23170,  22884,  22594,  22301,  22005,  21705,  21403,  21096,
     20787,  20475,  20159,  19841,  19519,  19195,  18868,  18537,
     18204,  17869,  17530,  17189,  16846,  16499,  16151,  15800,
     15446,  15090,  14732,  14372,  14010,  13645,  13279,  12910,
     12539,  12167,  11793,  11417,  11039,  10659,  10278,   9896,
      9512,   9126,   8739,   8351,   7962,   7571,   7179,   6786,
      6393,   5998,   5602,   5205,   4808,   4410,   4011,   3612,
      3212,   2811,   2410,   2009,   1608,   1206,    804,    402,
         0,   -402,   -804,  -1206,  -1608,  -2009,  -2410,  -2811,
     -3212,  -3612,  -4011,  -4410,  -4808,  -5205,  -5602,  -5998,
     -6393,  -6786,  -7179,  -7571,  -7962,  -8351,  -8739,  -9126,
     -9512,  -9896, -10278, -10659, -11039, -11417, -11793, -12167,
    -12539, -12910, -13279, -13645, -14010, -14372, -14732, -15090,
    -15446, -15800, -16151, -16499, -16846, -17189, -17530, -17869,
    -18204, -18537, -18868, -19195, -19519, -19841, -20159, -20475,
    -20787, -21096, -21403, -21705, -22005, -22301, -22594, -22884,
    -23170, -23452, -23731, -24007, -24279, -24547, -24811, -25072,
    -25329, -25582, -25832, -26077, -26319, -26556, -26790, -27019,
    -27245, -27466, -27683, -27896, -28105, -28310, -28510, -28706,
    -28898, -29085, -29268, -29447, -29621, -29791, -29956, -30117,
    -30273, -30424, -30571, -30714, -30852, -30985, -31113, -31237,
    -31356, -31470, -31580, -31685, -31785, -31880, -31971, -32057,
    -32137, -32213, -32285, -32351, -32412, -32469, -32521, -32567,
    -32609, -32646, -32678, -32705, -32728, -32745, -32757, -32765,
};

// Twiddle factors (imaginary part) - Sine values in Q15
// W_N^k = sin(-2πk/N) for k = 0..255
const int16_t twiddle_sin_q15[256] = {
         0,   -402,   -804,  -1206,  -1608,  -2009,  -2410,  -2811,
     -3212,  -3612,  -4011,  -4410,  -4808,  -5205,  -5602,  -5998,
     -6393,  -6786,  -7179,  -7571,  -7962,  -8351,  -8739,  -9126,
     -9512,  -9896, -10278, -10659, -11039, -11417, -11793, -12167,
    -12539, -12910, -13279, -13645, -14010, -14372, -14732, -15090,
    -15446, -15800, -16151, -16499, -16846, -17189, -17530, -17869,
    -18204, -18537, -18868, -19195, -19519, -19841, -20159, -20475,
    -20787, -21096, -21403, -21705, -22005, -22301, -22594, -22884,
    -23170, -23452, -23731, -24007, -24279, -24547, -24811, -25072,
    -25329, -25582, -25832, -26077, -26319, -26556, -26790, -27019,
    -27245, -27466, -27683, -27896, -28105, -28310, -28510, -28706,
    -28898, -29085, -29268, -29447, -29621, -29791, -29956, -30117,
    -30273, -30424, -30571, -30714, -30852, -30985, -31113, -31237,
    -31356, -31470, -31580, -31685, -31785, -31880, -31971, -32057,
    -32137, -32213, -32285, -32351, -32412, -32469, -32521, -32567,
    -32609, -32646, -32678, -32705, -32728, -32745, -32757, -32765,
    -32767, -32765, -32757, -32745, -32728, -32705, -32678, -32646,
    -32609, -32567, -32521, -32469, -32412, -32351, -32285, -32213,
    -32137, -32057, -31971, -31880, -31785, -31685, -31580, -31470,
    -31356, -31237, -31113, -30985, -30852, -30714, -30571, -30424,
    -30273, -30117, -29956, -29791, -29621, -29447, -29268, -29085,
    -28898, -28706, -28510, -28310, -28105, -27896, -27683, -27466,
    -27245, -27019, -26790, -26556, -26319, -26077, -25832, -25582,
    -25329, -25072, -24811, -24547, -24279, -24007, -23731, -23452,
    -23170, -22884, -22594, -22301, -22005, -21705, -21403, -21096,
    -20787, -20475, -20159, -19841, -19519, -19195, -18868, -18537,
    -18204, -17869, -17530, -17189, -16846, -16499, -16151, -15800,
    -15446, -15090, -14732, -14372, -14010, -13645, -13279, -12910,
    -12539, -12167, -11793, -11417, -11039, -10659, -10278,  -9896,
     -9512,  -9126,  -8739,  -8351,  -7962,  -7571,  -7179,  -6786,
     -6393,  -5998,  -5602,  -5205,  -4808,  -4410,  -4011,  -3612,
     -3212,  -2811,  -2410,  -2009,  -1608,  -1206,   -804,   -402,
};

// Hann window for 400 samples (Q15 format)
// Hann(n) = 0.5 * (1 - cos(2πn/(N-1)))
const int16_t hann_window_q15[400] = {
         0,      2,      8,     18,     32,     51,     73,     99,
       130,    164,    203,    245,    292,    342,    397,    455,
       517,    584,    654,    728,    806,    888,    973,   1063,
      1156,   1253,   1354,   1459,   1567,   1679,   1794,   1914,
      2036,   2163,   2293,   2426,   2563,   2703,   2847,   2994,
      3144,   3298,   3455,   3615,   3778,   3944,   4114,   4286,
      4462,   4640,   4821,   5006,   5193,   5383,   5575,   5770,
      5968,   6169,   6372,   6577,   6785,   6995,   7208,   7423,
      7640,   7859,   8080,   8304,   8529,   8757,   8986,   9217,
      9450,   9684,   9921,  10159,  10398,  10639,  10881,  11125,
     11370,  11616,  11863,  12112,  12362,  12612,  12864,  13116,
     13369,  13623,  13878,  14133,  14389,  14645,  14902,  15159,
     15417,  15674,  15932,  16190,  16448,  16706,  16964,  17222,
     17479,  17736,  17993,  18250,  18506,  18762,  19016,  19271,
     19524,  19777,  20029,  20280,  20530,  20779,  21027,  21274,
     21520,  21764,  22007,  22249,  22489,  22728,  22965,  23200,
     23434,  23666,  23896,  24124,  24351,  24575,  24798,  25018,
     25236,  25452,  25666,  25877,  26086,  26293,  26497,  26699,
     26898,  27095,  27289,  27480,  27668,  27854,  28037,  28216,
     28393,  28567,  28738,  28906,  29071,  29233,  29391,  29546,
     29698,  29847,  29992,  30134,  30273,  30408,  30540,  30668,
     30792,  30913,  31031,  31145,  31255,  31361,  31464,  31563,
     31658,  31749,  31837,  31921,  32001,  32077,  32149,  32217,
     32281,  32342,  32398,  32451,  32499,  32544,  32584,  32620,
     32653,  32681,  32706,  32726,  32742,  32754,  32762,  32766,
     32766,  32762,  32754,  32742,  32726,  32706,  32681,  32653,
     32620,  32584,  32544,  32499,  32451,  32398,  32342,  32281,
     32217,  32149,  32077,  32001,  31921,  31837,  31749,  31658,
     31563,  31464,  31361,  31255,  31145,  31031,  30913,  30792,
     30668,  30540,  30408,  30273,  30134,  29992,  29847,  29698,
     29546,  29391,  29233,  29071,  28906,  28738,  28567,  28393,
     28216,  28037,  27854,  27668,  27480,  27289,  27095,  26898,
     26699,  26497,  26293,  26086,  25877,  25666,  25452,  25236,
     25018,  24798,  24575,  24351,  24124,  23896,  23666,  23434,
     23200,  22965,  22728,  22489,  22249,  22007,  21764,  21520,
     21274,  21027,  20779,  20530,  20280,  20029,  19777,  19524,
     19271,  19016,  18762,  18506,  18250,  17993,  17736,  17479,
     17222,  16964,  16706,  16448,  16190,  15932,  15674,  15417,
     15159,  14902,  14645,  14389,  14133,  13878,  13623,  13369,
     13116,  12864,  12612,  12362,  12112,  11863,  11616,  11370,
     11125,  10881,  10639,  10398,  10159,   9921,   9684,   9450,
      9217,   8986,   8757,   8529,   8304,   8080,   7859,   7640,
      7423,   7208,   6995,   6785,   6577,   6372,   6169,   5968,
      5770,   5575,   5383,   5193,   5006,   4821,   4640,   4462,
      4286,   4114,   3944,   3778,   3615,   3455,   3298,   3144,
      2994,   2847,   2703,   2563,   2426,   2293,   2163,   2036,
      1914,   1794,   1679,   1567,   1459,   1354,   1253,   1156,
      1063,    973,    888,    806,    728,    654,    584,    517,
       455,    397,    342,    292,    245,    203,    164,    130,
        99,     73,     51,     32,     18,      8,      2,      0,
};

// Bit-reversal lookup table for 512 points
// Avoids G_BITREVERSE instruction (not supported on AIE2)
const uint16_t bit_reverse_lut[512] = {
      0, 256, 128, 384,  64, 320, 192, 448,  32, 288, 160, 416,  96, 352, 224, 480,
     16, 272, 144, 400,  80, 336, 208, 464,  48, 304, 176, 432, 112, 368, 240, 496,
      8, 264, 136, 392,  72, 328, 200, 456,  40, 296, 168, 424, 104, 360, 232, 488,
     24, 280, 152, 408,  88, 344, 216, 472,  56, 312, 184, 440, 120, 376, 248, 504,
      4, 260, 132, 388,  68, 324, 196, 452,  36, 292, 164, 420, 100, 356, 228, 484,
     20, 276, 148, 404,  84, 340, 212, 468,  52, 308, 180, 436, 116, 372, 244, 500,
     12, 268, 140, 396,  76, 332, 204, 460,  44, 300, 172, 428, 108, 364, 236, 492,
     28, 284, 156, 412,  92, 348, 220, 476,  60, 316, 188, 444, 124, 380, 252, 508,
      2, 258, 130, 386,  66, 322, 194, 450,  34, 290, 162, 418,  98, 354, 226, 482,
     18, 274, 146, 402,  82, 338, 210, 466,  50, 306, 178, 434, 114, 370, 242, 498,
     10, 266, 138, 394,  74, 330, 202, 458,  42, 298, 170, 426, 106, 362, 234, 490,
     26, 282, 154, 410,  90, 346, 218, 474,  58, 314, 186, 442, 122, 378, 250, 506,
      6, 262, 134, 390,  70, 326, 198, 454,  38, 294, 166, 422, 102, 358, 230, 486,
     22, 278, 150, 406,  86, 342, 214, 470,  54, 310, 182, 438, 118, 374, 246, 502,
     14, 270, 142, 398,  78, 334, 206, 462,  46, 302, 174, 430, 110, 366, 238, 494,
     30, 286, 158, 414,  94, 350, 222, 478,  62, 318, 190, 446, 126, 382, 254, 510,
      1, 257, 129, 385,  65, 321, 193, 449,  33, 289, 161, 417,  97, 353, 225, 481,
     17, 273, 145, 401,  81, 337, 209, 465,  49, 305, 177, 433, 113, 369, 241, 497,
      9, 265, 137, 393,  73, 329, 201, 457,  41, 297, 169, 425, 105, 361, 233, 489,
     25, 281, 153, 409,  89, 345, 217, 473,  57, 313, 185, 441, 121, 377, 249, 505,
      5, 261, 133, 389,  69, 325, 197, 453,  37, 293, 165, 421, 101, 357, 229, 485,
     21, 277, 149, 405,  85, 341, 213, 469,  53, 309, 181, 437, 117, 373, 245, 501,
     13, 269, 141, 397,  77, 333, 205, 461,  45, 301, 173, 429, 109, 365, 237, 493,
     29, 285, 157, 413,  93, 349, 221, 477,  61, 317, 189, 445, 125, 381, 253, 509,
      3, 259, 131, 387,  67, 323, 195, 451,  35, 291, 163, 419,  99, 355, 227, 483,
     19, 275, 147, 403,  83, 339, 211, 467,  51, 307, 179, 435, 115, 371, 243, 499,
     11, 267, 139, 395,  75, 331, 203, 459,  43, 299, 171, 427, 107, 363, 235, 491,
     27, 283, 155, 411,  91, 347, 219, 475,  59, 315, 187, 443, 123, 379, 251, 507,
      7, 263, 135, 391,  71, 327, 199, 455,  39, 295, 167, 423, 103, 359, 231, 487,
     23, 279, 151, 407,  87, 343, 215, 471,  55, 311, 183, 439, 119, 375, 247, 503,
     15, 271, 143, 399,  79, 335, 207, 463,  47, 303, 175, 431, 111, 367, 239, 495,
     31, 287, 159, 415,  95, 351, 223, 479,  63, 319, 191, 447, 127, 383, 255, 511,
};

#endif // FFT_COEFFS_FIXED_H
