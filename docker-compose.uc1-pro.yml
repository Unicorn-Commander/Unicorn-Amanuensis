services:
  unicorn-amanuensis:
    image: unicorn-amanuensis-unified:latest  # Use our new unified container
    container_name: unicorn-amanuensis-uc1-pro
    restart: unless-stopped
    
    # Intel iGPU device access for UC-1 Pro
    devices:
      - /dev/dri:/dev/dri
    
    # Intel UHD Graphics 770 optimized environment for SYCL
    environment:
      - API_PORT=8887                         # Unified server port
      - WHISPER_MODEL=base                    # Optimal model for UC-1 Pro (11.2x realtime)
      - ONEAPI_DEVICE_SELECTOR=level_zero:0   # Direct Intel GPU access via Level Zero
      - SYCL_DEVICE_FILTER=gpu               # Force SYCL GPU mode
      - LD_LIBRARY_PATH=/opt/intel/oneapi/compiler/latest/lib:$LD_LIBRARY_PATH
    
    # Port mapping - 8887 is the unified server port
    ports:
      - "8887:8887"
    
    # Volume mounts for UC-1 Pro
    volumes:
      - /opt/intel/oneapi:/opt/intel/oneapi:ro  # Mount Intel OneAPI libraries
      - ./models:/app/whisper-cpp-igpu/models:cached  # Model cache
      - ./logs:/app/logs:rw                   # Application logs  
      - /tmp:/tmp:rw                          # Temp processing
      - /dev/shm:/dev/shm                     # Shared memory for performance
    
    # Health check optimized for Intel iGPU
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8887/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s                       # Allow time for Intel GPU init
    
    # Resource limits for UC-1 Pro (Intel UHD Graphics 770)
    deploy:
      resources:
        limits:
          memory: 4G                          # Max RAM usage
          cpus: '2.0'                         # Limit CPU (we use iGPU)
        reservations:
          memory: 1G                          # Guaranteed RAM
          cpus: '0.5'                         # Minimal CPU reservation
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
        labels: "service=unicorn-amanuensis,platform=uc1-pro"
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Labels for UC-1 Pro identification
    labels:
      - "com.unicorncommander.platform=uc1-pro"
      - "com.unicorncommander.service=unicorn-amanuensis"
      - "com.unicorncommander.hardware=intel-uhd-graphics-770"
      - "com.unicorncommander.performance=7-20x-realtime"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: unicorn-nginx-uc1-pro
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx:rw
    depends_on:
      - unicorn-amanuensis
    profiles:
      - proxy
    labels:
      - "com.unicorncommander.platform=uc1-pro"
      - "com.unicorncommander.service=nginx-proxy"

  # Optional: Monitoring with Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: unicorn-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring
    labels:
      - "com.unicorncommander.platform=uc1-pro"
      - "com.unicorncommander.service=prometheus"

  # Optional: Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: unicorn-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=unicorn123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    profiles:
      - monitoring
    labels:
      - "com.unicorncommander.platform=uc1-pro"
      - "com.unicorncommander.service=grafana"

# Networks
networks:
  default:
    name: unicorn-uc1-pro-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Named volumes
volumes:
  prometheus_data:
    labels:
      - "com.unicorncommander.platform=uc1-pro"
      - "com.unicorncommander.data=prometheus"
  
  grafana_data:
    labels:
      - "com.unicorncommander.platform=uc1-pro"  
      - "com.unicorncommander.data=grafana"

# Configuration for UC-1 Pro deployment
x-uc1-pro-config: &uc1-pro-config
  platform: uc1-pro
  hardware:
    cpu: Intel Core with UHD Graphics 770
    gpu: Intel UHD Graphics 770 (32 EUs @ 1550MHz)  
    memory: 89GB accessible via iGPU
  software:
    os: Ubuntu 22.04
    runtime: Docker + Intel oneAPI
    acceleration: SYCL + Level Zero
  performance:
    target: 7-20x realtime
    cpu_usage: 0% (iGPU only)
    models: tiny, base, small, medium, large-v3